@model Assignment1.Models.LoginModel

@{
    ViewBag.Title = "Log in";
}

@*<div class="container" style="height:450px; width:100%">

    <form class="form-signin" role="form">
        <h2 class="form-signin-heading">Please sign in</h2>
        <input type="text" class="form-control" placeholder="User name" required="" autofocus="" style="width:300px;">
        <input type="password" class="form-control" placeholder="Password" required="" style="width:300px;">
        <label class="checkbox">
            <input type="checkbox" value="remember-me"> Remember me
        </label>
        <button class="btn btn-lg btn-primary btn-block" type="submit" style="width:300px;">Sign in</button>
    </form>
    <p style="padding-top:5px;">Don't have an account? <a href='@Url.Action("Register", "Account")'>register here</a> </p>

</div>*@


<hgroup class="title">
    @*<h1>@ViewBag.Title.</h1>*@

</hgroup>

@*<section id="loginForm">*@
<h2>Use a local account to log in.</h2>
@using (Html.BeginForm(new { ReturnUrl = ViewBag.ReturnUrl })) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Log in Form</legend>
        <ol>
            <li>
                @Html.LabelFor(m => m.UserName)
                @Html.TextBoxFor(m => m.UserName)
                @Html.ValidationMessageFor(m => m.UserName)
            </li>
            <li>
                @Html.LabelFor(m => m.Password)
                @Html.PasswordFor(m => m.Password)
                @Html.ValidationMessageFor(m => m.Password)
            </li>
            <li>
                @Html.CheckBoxFor(m => m.RememberMe)
                @Html.LabelFor(m => m.RememberMe, new { @class = "checkbox" })
            </li>
        </ol>
        <input type="submit" value="Log in" />
    </fieldset>
    <p>
        @Html.ActionLink("Register", "Register") if you don't have an account.
    </p>
}
@*</section>*@

@*<section class="social" id="socialLoginForm">
    <h2>Use another service to log in.</h2>
    @Html.Action("ExternalLoginsList", new { ReturnUrl = ViewBag.ReturnUrl })
</section>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

